apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: grafana-server
  annotations:
    reloader.stakater.com/search: "true"
spec:
  replicas: 1
  selector:
    matchLabels:
      name: grafana-server
  template:
    metadata:
      labels:
        name: grafana-server
    spec:
      serviceAccountName: grafana-sa
      initContainers:
      - name: grafana-data-permission-fix
        image: busybox
        command: ["/bin/sh", "-c", "chmod -R 777 /var/lib/grafana"]
        volumeMounts:
        - name: grafana-storages
          mountPath: /var/lib/grafana
      containers:
        - name: grafana-server-cont
          image: grafana/grafana:latest
          ports:
          - containerPort: 3000
          volumeMounts:
          - name: grafana-storages
            mountPath: /var/lib/grafana
          - name: grafana-config-volume
            mountPath: /usr/share/grafana/.aws
          env:
          - name: GF_PATHS_DATA
            value: /var/lib/grafana
          - name: GF_PATHS_HOME
            value: /usr/share/grafana
          - name: GF_PATHS_LOGS
            value: /var/log/grafana
          - name: GF_PATHS_PLUGINS
            value: /var/lib/grafana/plugins
          - name: GF_PATHS_PROVISIONING
            value: /etc/grafana/provisioning
          resources:
            requests:
              memory: "64Mi"
              cpu: "10m"
            limits:
              memory: "256Mi"
              cpu: "200m"

      volumes:
      - name: grafana-config-volume
        configMap:
          name: grafana-config
  volumeClaimTemplates:
  - metadata:
      name: grafana-storages
    spec:
      storageClassName: manual
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 2Gi
